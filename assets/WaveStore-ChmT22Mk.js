import{ba as c,bc as i}from"./index-DI_k6pjs.js";import{E as l}from"./main-Buwdkzgp.js";const n=c("character",{state:()=>({table:[],players:[]}),actions:{initCharTable(s){if(s.reduce((t,r)=>t+r.length,0)>25*30){alert("数据过多");return}this.table=s.map(t=>({...t,waveIndex:-1,teamIndex:-1,locked:!1}));const a=new Map;for(const t of this.table){const r=t.id;a.has(r)||a.set(r,{id:r,sup:0,carry:0,absent:!1});const o=a.get(r);t.ifsup===1||t.ifsup==="1"?o.sup++:(t.ifsup===0||t.ifsup==="0")&&o.carry++}this.players=Array.from(a.values())}},persist:{paths:["table","players"]}}),u=c("teams",{state:()=>({teams:[],teamsPerWave:3}),actions:{initTeams(){const s=f(),{waves:e}=i(s);this.teams=e.value.map(a=>({difficulty:a.difficulty,color:Array.from({length:this.teamsPerWave},()=>[])}))},addnormal(s="Normal"){this.teams.push({difficulty:s,color:Array.from({length:this.teamsPerWave},()=>[])})},addhard(s="Hard"){this.teams.push({difficulty:s,color:Array.from({length:this.teamsPerWave},()=>[])})},removeWave(s){s===-1&&(s=this.teams.length-1),!(s<0||s>=this.teams.length)&&this.teams.splice(s,1)}},persist:{paths:["teams"]}}),f=c("waveInfo",{state:()=>({waves:[],cube:{},lock:!1}),actions:{resetCube(){const s=n(),{players:e}=i(s),a=this.waves.length??0;l({message:`players = ${e.value.length}, cols = ${a}`,type:"info",duration:3e3});const t={};for(const r of e.value)t[r.id]=Array(a).fill(0);this.cube=t},addnormal(s="Normal"){if(this.lock){alert("数据已锁定");return}this.waves.push({difficulty:s});for(const e in this.cube)this.cube[e].push(0)},addhard(s="Hard"){if(this.lock){alert("数据已锁定");return}this.waves.push({difficulty:s});for(const e in this.cube)this.cube[e].push(0)},removeWave(s){if(this.lock){alert("数据已锁定");return}s===-1&&(s=this.waves.length-1),this.waves.splice(s,1);for(const e in this.cube)s>=0&&s<this.cube[e].length&&this.cube[e].splice(s,1)},clearWaves(){this.waves=[],this.resetCube()},changeCubeState(s,e,a){var r;const t=((r=this.cube[s])==null?void 0:r[e])??0;this.cube[s][e]=(t+a)%3},syncData(){const s=u(),{teams:e}=i(s);this.resetCube(),e.value.forEach((a,t)=>{a.color.forEach((r,o)=>{r.forEach(h=>{this.cube[h.id][t]=h.ifsup+1})})})}},persist:{paths:["waves","cube"]}});export{f as a,u as b,n as u};
